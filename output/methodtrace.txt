~org.apache.xml.security.c14n.Canonicalizer.canonicalize (byte []): byte []~org.apache.xml.security.utils.HexDump.<static initializer>~org.apache.xml.security.utils.ElementProxy.guaranteeThatElementInCorrectSpace (String): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.update (byte []): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.engineUnwrap (byte [], Key, String): Key~org.apache.xml.security.exceptions.XMLSecurityException.XMLSecurityException (String, Object []): void~org.apache.xml.security.keys.keyresolver.KeyResolver.resolveX509Certificate (Element, String, StorageResolver): X509Certificate~org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.<static initializer>~org.apache.xml.security.signature.XMLSignatureInput.setMIMEType (String): void~org.apache.xml.security.transforms.Transforms.Transforms (Document): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyTransportImpl_RSAOAEP_BC.KeyTransportImpl_RSAOAEP_BC (): void~org.apache.xml.security.algorithms.SignatureAlgorithm.getBaseNamespace (): String~org.apache.xml.security.utils.ElementProxy.getBigIntegerFromChildElement (String, String): BigInteger~org.apache.xml.security.utils.Base64.decode (String): byte []~org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver.engineResolvePublicKey (Element, String, StorageResolver): PublicKey~org.apache.xml.security.c14n.CanonicalizerSpi.engineCanonicalize (byte []): byte []~org.apache.xml.security.algorithms.encryption.EncryptionMethod.EncryptionMethod (Document, String, EncryptionMethodParams): void~org.apache.xml.security.c14n.helper.C14nHelper.normalizeComment (String): String~org.apache.xml.security.signature.SignedInfo.getBaseLocalName (): String~org.apache.xml.security.c14n.helper.AttrCompare.AttrCompare (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES_BC.engineUnwrap (byte [], Key, String): Key~org.apache.xml.security.utils.ElementProxy.ElementProxy (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_TRIPLEDES_BC.BlockEncryptionImpl_TRIPLEDES_BC (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES128_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.signature.XMLSignatureInput.isOctetStream (): boolean~org.apache.xml.security.signature.XMLSignatureInput.XMLSignatureInput (InputStream): void~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineInitVerify (PublicKey): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineVisible (Node): boolean~org.apache.xml.security.utils.PRNG.PRNG (SecureRandom): void~org.apache.xml.security.signature.Reference.Reference (Element, String, Manifest): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.<static initializer>~org.apache.xml.security.algorithms.encryption.EncryptionMethod.decrypt (byte [], Key): byte []~org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.RSAKeyValueResolver (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES192_BC.getRequiredProviderName (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineDoCanonicalization (Node): byte []~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES256_BC.engineGetIvLength (): int~org.apache.xml.security.c14n.helper.C14nHelper.normalizeProcessingInstruction (String): String~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl.engineEncrypt (byte [], Key, byte []): byte []~org.apache.xml.security.c14n.helper.AttrCompare.<static initializer>~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineUpdate (byte []): void~org.apache.xml.security.keys.keyresolver.KeyResolver.getInstance (Element, String, StorageResolver): KeyResolver~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetURI (): String~org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem.translateUriToFilename (String): String~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.engineResolve (Attr, String): XMLSignatureInput~org.apache.xml.security.algorithms.Algorithm.<static initializer>~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1.SignatureBaseRSA$SignatureRSASHA1 (): void~org.apache.xml.security.c14n.Canonicalizer.canonicalize (NodeList): byte []~org.apache.xml.security.exceptions.XMLSecurityException.XMLSecurityException (String): void~org.apache.xml.security.utils.XMLUtils.getXercesVersion (): String~org.apache.xml.security.c14n.Canonicalizer.register (String, String): void~org.apache.xml.security.utils.CachedXPathFuncHereAPI.eval (Node, Node, PrefixResolver): XObject~org.apache.xml.security.algorithms.encryption.EncryptionMethod.getBaseLocalName (): String~org.apache.xml.security.keys.KeyInfo.getX509CertificateFromStaticResolvers (): X509Certificate~org.apache.xml.security.keys.content.x509.XMLX509Certificate.getCertificateBytes (): byte []~org.apache.xml.security.signature.SignedInfo.verify (boolean): boolean~org.apache.xml.security.c14n.helper.C14nHelper.normalizeAttr (String): String~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_TRIPLEDES_BC.getRequiredProviderName (): String~org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass.JCEMapper$ProviderIdClass (String, String): void~org.apache.xml.security.utils.SignatureElementProxy.SignatureElementProxy (Document): void~org.apache.xml.security.algorithms.encryption.EncryptionMethodSpi.EncryptionMethodSpi (): void~org.apache.xml.security.utils.Constants.getSignatureSpecNSprefix (): String~org.apache.xml.security.utils.XMLUtils.findClassLoader (): ClassLoader~org.apache.xml.security.signature.SignedInfo.<static initializer>~org.apache.xml.security.utils.PRNG.init (SecureRandom): void~org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolveX509Certificate (Element, String, StorageResolver): X509Certificate~org.apache.xml.security.keys.content.keyvalues.DSAKeyValue.getBaseLocalName (): String~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES256_BC.getRequiredProviderName (): String~org.apache.xml.security.algorithms.JCEMapper.<static initializer>~org.apache.xml.security.utils.resolver.ResourceResolver.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyTransportImpl_RSAPKCS15_BC.KeyTransportImpl_RSAPKCS15_BC (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES128_BC.engineGetIvLength (): int~org.apache.xml.security.transforms.implementations.TransformXPath.TransformXPath (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES192_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.signature.XMLSignatureInput.isInitialized (): boolean~org.apache.xml.security.utils.I18n.initLocale (String, String): void~org.apache.xml.security.utils.Base64.encodeBlock (byte [], int): char []~org.apache.xml.security.algorithms.implementations.SignatureDSA.engineGetJCEProviderName (): String~org.apache.xml.security.signature.XMLSignature.addResourceResolver (ResourceResolverSpi): void~org.apache.xml.security.transforms.implementations.TransformC14NWithComments.enginePerformTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.algorithms.SignatureAlgorithm.initVerify (PublicKey): void~org.apache.xml.security.signature.XMLSignatureInput.setSourceURI (String): void~org.apache.xml.security.keys.content.RetrievalMethod.getURIAttr (): Attr~org.apache.xml.security.utils.resolver.ResourceResolverSpi.fixURI (String): String~org.apache.xml.security.utils.resolver.ResourceResolver.resolve (Attr, String): XMLSignatureInput~org.apache.xml.security.utils.HelperNodeList.getLength (): int~org.apache.xml.security.utils.HelperNodeList.<static initializer>~org.apache.xml.security.keys.KeyInfo.lengthInternalKeyResolver (): int~org.apache.xml.security.algorithms.JCEMapper.translateURItoJCEID (String, String): JCEMapper$ProviderIdClass~org.apache.xml.security.algorithms.encryption.EncryptionMethodSpi.getImplementedAlgorithmJCE (): String~org.apache.xml.security.signature.Reference.<static initializer>~org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous.<static initializer>~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.isXPointerSlash (Attr, String): boolean~org.apache.xml.security.Init.registerKeyInfoContentHandler (String, String, String): void~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineGetContextFromElement (Element): void~org.apache.xml.security.keys.content.X509Data.getBaseLocalName (): String~org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver.RetrievalMethodResolver (): void~org.apache.xml.security.utils.XMLUtils.getXerces2Version (): String~org.apache.xml.security.signature.XMLSignature.checkSignatureValue (X509Certificate): boolean~org.apache.xml.security.utils.IdResolver.getElementById (Document, String): Element~org.apache.xml.security.Init.qualifyNamespace (String, String): String~org.apache.xml.security.keys.content.keyvalues.RSAKeyValue.getPublicKey (): PublicKey~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.processNamespaces (Node): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES256_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.transforms.Transform.<static initializer>~org.apache.xml.security.keys.content.RetrievalMethod.getBaseLocalName (): String~org.apache.xml.security.c14n.CanonicalizerSpi.engineSetURI (String): void~org.apache.xml.security.utils.resolver.ResourceResolver.addProperties (Map): void~org.apache.xml.security.transforms.implementations.TransformBase64Decode.<static initializer>~org.apache.xml.security.algorithms.encryption.EncryptionMethod.getBlockSize (): int~org.apache.xml.security.utils.HexDump.byte2hex (byte, StringBuffer): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.NamespaceSearcher (Node, Map, boolean): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.getInstance (Document, String): MessageDigestAlgorithm~org.apache.xml.security.utils.I18n.getExceptionMessage (String, Object []): String~org.apache.xml.security.c14n.helper.NamespaceSearcher.visibleAncestorsContainNonDefaultNS (): boolean~org.apache.xml.security.algorithms.SignatureAlgorithm.verify (byte []): boolean~org.apache.xml.security.signature.XMLSignatureInput.setCanonicalizerURI (String): void~org.apache.xml.security.keys.content.x509.XMLX509Certificate.XMLX509Certificate (Element, String): void~org.apache.xml.security.signature.Manifest.setVerificationResult (int, boolean): void~org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous.ResolverAnonymous (String): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyTransportImpl.KeyTransportImpl (): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupportWithComments.Canonicalizer20010315WithoutXPathSupportWithComments (): void~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.unwrap (byte [], Key): byte []~org.apache.xml.security.utils.I18n.<static initializer>~org.apache.xml.security.signature.SignedInfo.getSignatureMethodElement (): Element~org.apache.xml.security.algorithms.encryption.EncryptionMethod.register (String, String): boolean~org.apache.xml.security.signature.Manifest.verifyReferences (boolean): boolean~org.apache.xml.security.signature.XMLSignatureInput.getBytes (): byte []~org.apache.xml.security.utils.JavaUtils.<static initializer>~org.apache.xml.security.signature.XMLSignature.getKeyInfo (): KeyInfo~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.SignatureBaseRSA (): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.checkForRelativeNamespace (Node): void~org.apache.xml.security.algorithms.SignatureAlgorithmSpi.engineGetContextFromElement (Element): void~org.apache.xml.security.signature.Reference.verify (): boolean~org.apache.xml.security.keys.keyresolver.KeyResolver.KeyResolver (String): void~org.apache.xml.security.keys.keyresolver.KeyResolver.register (String): void~org.apache.xml.security.signature.SignedInfo.getCanonicalizedOctetStream (): byte []~org.apache.xml.security.transforms.Transform.performTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.transforms.Transforms.Transforms (Element, String): void~org.apache.xml.security.signature.Reference.getMessageDigestAlgorithm (): MessageDigestAlgorithm~org.apache.xml.security.c14n.helper.C14nHelper.namespaceIsRelative (Attr): boolean~org.apache.xml.security.keys.content.keyvalues.DSAKeyValue.DSAKeyValue (Element, String): void~org.apache.xml.security.algorithms.JCEMapper.init (Element): void~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.engineCanResolve (Attr, String): boolean~org.apache.xml.security.transforms.implementations.FuncHereContext.<static initializer>~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.processXmlAttributesAlgo (Node, String): Object []~org.apache.xml.security.utils.HexDump.hexStringToByteArray (String): byte []~org.apache.xml.security.algorithms.MessageDigestAlgorithm.MessageDigestAlgorithm (Document, MessageDigest, String): void~org.apache.xml.security.transforms.implementations.TransformC14N.<static initializer>~org.apache.xml.security.transforms.TransformSpi.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES_BC.engineInit (Document, EncryptionMethodParams): EncryptionMethodParams~org.apache.xml.security.keys.KeyInfo.getPublicKeyFromStaticResolvers (): PublicKey~org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem.ResolverLocalFilesystem (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES192_BC.getRequiredProviderName (): String~org.apache.xml.security.transforms.Transform.getURI (): String~org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1.IntegrityHmac$IntegrityHmacSHA1 (): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.digest (): byte []~org.apache.xml.security.utils.resolver.ResourceResolverSpi.engineAddProperies (Map): void~org.apache.xml.security.c14n.Canonicalizer.getXPathString (): String~org.apache.xml.security.utils.JavaUtils.getBytesFromStream (InputStream): byte []~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.KeyWrapImpl_TRIPLEDES_BC (): void~org.apache.xml.security.utils.resolver.ResourceResolver.ResourceResolver (ResourceResolverSpi): void~org.apache.xml.security.keys.keyresolver.KeyResolverSpi.KeyResolverSpi (): void~org.apache.xml.security.signature.Manifest.addResourceResolver (ResourceResolverSpi): void~org.apache.xml.security.algorithms.implementations.IntegrityHmac.<static initializer>~org.apache.xml.security.algorithms.SignatureAlgorithm.getJCEProviderName (): String~org.apache.xml.security.utils.IgnoreAllErrorHandler.IgnoreAllErrorHandler (): void~org.apache.xml.security.c14n.helper.C14nHelper.namespaceIsAbsolute (Attr): boolean~org.apache.xml.security.utils.XMLUtils.addReturnToElement (Element): void~org.apache.xml.security.signature.XMLSignatureInput.isNodeSet (): boolean~org.apache.xml.security.keys.KeyInfo.getPublicKey (): PublicKey~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES256_BC.KeyWrapImpl_AES256_BC (): void~org.apache.xml.security.utils.XMLUtils.getXalanVersion (): String~org.apache.xml.security.utils.XMLUtils.getNodeTypeString (short): String~org.apache.xml.security.c14n.helper.C14nHelper.assertNotRelativeNS (Attr): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.invisibleAncestorsContainNonDefaultNS (): boolean~org.apache.xml.security.c14n.Canonicalizer.init (): void~org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass.getAlgorithmID (): String~org.apache.xml.security.c14n.helper.NamespaceSearcher.findFirstInvisibleDefaultNSAttr (): Attr~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineCanonicalize (Node): byte []~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.calculateCMSKeyChecksum (byte []): byte []~org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1.engineGetURI (): String~org.apache.xml.security.keys.content.keyvalues.RSAKeyValue.getBaseLocalName (): String~org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver.DSAKeyValueResolver (): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.reset (): void~org.apache.xml.security.algorithms.JCEMapper.getProviderIsInClassPath (String): boolean~org.apache.xml.security.algorithms.implementations.IntegrityHmac.IntegrityHmac (): void~org.apache.xml.security.algorithms.JCEMapper.getURIfromKey (Key, String): String~org.apache.xml.security.utils.SignatureElementProxy.getBaseNamespace (): String~org.apache.xml.security.Init$FuncHereLoader.getFunction (): Function~org.apache.xml.security.signature.Reference.calculateDigest (): byte []~org.apache.xml.security.algorithms.MessageDigestAlgorithm.getBaseLocalName (): String~org.apache.xml.security.transforms.Transform.register (String, String): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.visible (Node): boolean~org.apache.xml.security.c14n.CanonicalizationException.CanonicalizationException (String, Object []): void~org.apache.xml.security.utils.resolver.ResourceResolverSpi.<static initializer>~org.apache.xml.security.utils.HelperNodeList.HelperNodeList (): void~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineGetJCEProviderName (): String~org.apache.xml.security.algorithms.Algorithm.getAlgorithmURI (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineGetRemoveNSAttrs (): boolean~org.apache.xml.security.utils.Base64.encodeFullBlock (byte [], int): char []~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.checkTraversability (Document): void~org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.c14n.helper.C14nHelper.namespaceIsAbsolute (String): boolean~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupportOmitComments.Canonicalizer20010315WithoutXPathSupportOmitComments (): void~org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem.engineCanResolve (Attr, String): boolean~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.<static initializer>~org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver.X509SubjectNameResolver (): void~org.apache.xml.security.utils.Base64.encode (byte [], int): String~org.apache.xml.security.signature.SignedInfo.getCanonicalizationMethodURI (): String~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES256_BC.getRequiredProviderName (): String~org.apache.xml.security.utils.resolver.ResourceResolver.ResourceResolver (String): void~org.apache.xml.security.c14n.helper.C14nHelper.normalizeText (String): String~org.apache.xml.security.algorithms.implementations.SignatureDSA.engineGetJCEAlgorithmString (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupport.<static initializer>~org.apache.xml.security.utils.Base64.getChar (int): char~org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.algorithms.SignatureAlgorithm.getBaseLocalName (): String~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetXPath (): Object~org.apache.xml.security.algorithms.encryption.helper.AESWrapper.wrap (Key, Key, byte []): byte []~org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.transforms.TransformSpi.setTransform (Transform): void~org.apache.xml.security.signature.Reference.getURI (): String~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineUpdate (byte []): void~org.apache.xml.security.utils.XMLUtils.getOwnerDocument (Node): Document~org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver.<static initializer>~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineGetJCEAlgorithmString (): String~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES_BC.engineEncrypt (byte [], Key): byte []~org.apache.xml.security.utils.XMLUtils.guaranteeThatElementInSignatureSpace (Element, String): void~org.apache.xml.security.signature.Reference.getTransforms (): Transforms~org.apache.xml.security.c14n.Canonicalizer.Canonicalizer (String): void~org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver.X509IssuerSerialResolver (): void~org.apache.xml.security.keys.content.x509.XMLX509Certificate.<static initializer>~org.apache.xml.security.utils.resolver.implementations.ResolverFragment.engineCanResolve (Attr, String): boolean~org.apache.xml.security.keys.content.keyvalues.RSAKeyValue.<static initializer>~org.apache.xml.security.signature.Reference.getBaseLocalName (): String~org.apache.xml.security.algorithms.Algorithm.Algorithm (Document, String): void~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.ResolverXPointer (): void~org.apache.xml.security.signature.XMLSignature.XMLSignature (Element, String): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES192_BC.BlockEncryptionImpl_AES192_BC (): void~org.apache.xml.security.utils.JavaUtils.binaryCompare (byte [], byte []): boolean~org.apache.xml.security.keys.KeyInfo.getBaseLocalName (): String~org.apache.xml.security.algorithms.encryption.EncryptionMethod.wrap (Key, Key, byte []): byte []~org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver.X509SKIResolver (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl.engineGetBlockSize (): int~org.apache.xml.security.utils.resolver.ResourceResolverSpi.expandSystemId (String, String): String~org.apache.xml.security.utils.I18n.init (String, String): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.visibleAncestorsContainDefaultNS (): boolean~org.apache.xml.security.signature.SignedInfo.SignedInfo (Element, String): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.visibleAncestorsContainAnyNS (boolean, boolean): boolean~org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP.<static initializer>~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineSetXPathNodeSet (NodeList): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.isEqual (byte [], byte []): boolean~org.apache.xml.security.transforms.implementations.TransformXPointer.<static initializer>~org.apache.xml.security.c14n.helper.NamespaceSearcher.findFirstVisibleDefaultNSAttr (): Attr~org.apache.xml.security.keys.content.RetrievalMethod.<static initializer>~org.apache.xml.security.keys.keyresolver.KeyResolver.length (): int~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl.BlockEncryptionImpl (): void~org.apache.xml.security.utils.Base64.<static initializer>~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineGetJCEProviderName (): String~org.apache.xml.security.algorithms.SignatureAlgorithm.SignatureAlgorithm (Element, String): void~org.apache.xml.security.transforms.implementations.TransformC14N.TransformC14N (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyTransportImpl.getRequiredProviderName (): String~org.apache.xml.security.signature.XMLSignature.getSignatureValue (): byte []~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES192_BC.KeyWrapImpl_AES192_BC (): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.goToNextNode (): void~org.apache.xml.security.c14n.helper.C14nNodeFilter.acceptNode (Node): short~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1.engineGetURI (): String~org.apache.xml.security.transforms.Transform.getInstance (Document, String): Transform~org.apache.xml.security.keys.keyresolver.KeyResolverSpi.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES128_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.processXmlAttributes (Node): void~org.apache.xml.security.signature.Reference.typeIsReferenceToManifest (): boolean~org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous.engineResolve (Attr, String): XMLSignatureInput~org.apache.xml.security.Init$FuncHereLoader.Init$FuncHereLoader (): void~org.apache.xml.security.keys.KeyInfo.KeyInfo (Element, String): void~org.apache.xml.security.utils.resolver.implementations.ResolverFragment.<static initializer>~org.apache.xml.security.keys.content.keyvalues.DSAKeyValue.getPublicKey (): PublicKey~org.apache.xml.security.c14n.CanonicalizerSpi.engineSetIncludeComments (boolean): void~org.apache.xml.security.transforms.implementations.TransformXPath.<static initializer>~org.apache.xml.security.transforms.implementations.FuncHereContext.FuncHereContext (Node, DTMManager): void~org.apache.xml.security.keys.keyresolver.KeyResolver.item (int): KeyResolver~org.apache.xml.security.utils.Base64.decode (Element): byte []~org.apache.xml.security.utils.resolver.implementations.ResolverFragment.engineResolve (Attr, String): XMLSignatureInput~org.apache.xml.security.transforms.Transforms.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES_BC.KeyWrapImpl_AES_BC (): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.invisibleAncestorsContainDefaultNS (): boolean~org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature.<static initializer>~org.apache.xml.security.transforms.Transform.Transform (Element, String): void~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.wrap (byte [], Key, byte []): byte []~org.apache.xml.security.Init.init (): void~org.apache.xml.security.signature.Reference.dereferenceURIandPerformTransforms (): void~org.apache.xml.security.algorithms.JCEMapper.translateURItoJCEID (String): JCEMapper$ProviderIdClass~org.apache.xml.security.algorithms.JCEMapper.addProvider (String): boolean~org.apache.xml.security.c14n.Canonicalizer.getInstance (String): Canonicalizer~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.getRequiredProviderName (): String~org.apache.xml.security.utils.Base64.encode (byte []): String~org.apache.xml.security.transforms.implementations.FuncHere.FuncHere (): void~org.apache.xml.security.utils.resolver.ResourceResolver.getInstance (Attr, String, Vector): ResourceResolver~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.Canonicalizer20010315 (): void~org.apache.xml.security.signature.Reference.getReferencedBytes (): byte []~org.apache.xml.security.keys.content.RetrievalMethod.getType (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.collectUsedXmlAttributes (Node): HashSet~org.apache.xml.security.algorithms.SignatureAlgorithm.initVerify (Key): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES128_BC.BlockEncryptionImpl_AES128_BC (): void~org.apache.xml.security.keys.keyresolver.KeyResolver.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES256_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.signature.Manifest.Manifest (Element, String): void~org.apache.xml.security.utils.XMLUtils.getNodeTypeString (Node): String~org.apache.xml.security.algorithms.encryption.helper.AESWrapper.AESWrapper (Cipher): void~org.apache.xml.security.transforms.implementations.TransformXPath.enginePerformTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.removeNSAttrs (): void~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetIncludeComments (): boolean~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.<static initializer>~org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature.enginePerformTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.signature.XMLSignatureInput.setNodesetXPath (String): void~org.apache.xml.security.utils.HelperNodeList.HelperNodeList (boolean): void~org.apache.xml.security.keys.content.keyvalues.RSAKeyValue.RSAKeyValue (Element, String): void~org.apache.xml.security.c14n.Canonicalizer.getImplementingClass (String): String~org.apache.xml.security.utils.PRNG.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.engineInit (Document, EncryptionMethodParams): EncryptionMethodParams~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES192_BC.engineGetIvLength (): int~org.apache.xml.security.signature.XMLSignature.getBaseLocalName (): String~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl.engineDecrypt (byte [], Key): byte []~org.apache.xml.security.transforms.Transforms.addTransform (String): void~org.apache.xml.security.utils.XMLUtils.getXalan20Version (): String~org.apache.xml.security.c14n.Canonicalizer.setXPath (Object): void~org.apache.xml.security.c14n.helper.AttrCompare.signum (int): int~org.apache.xml.security.algorithms.implementations.SignatureDSA.engineInitVerify (PublicKey): void~org.apache.xml.security.transforms.implementations.TransformC14N.enginePerformTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.c14n.CanonicalizerSpi.engineSetXPath (Object): void~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.<static initializer>~org.apache.xml.security.transforms.implementations.TransformBase64Decode.TransformBase64Decode (): void~org.apache.xml.security.Init.<static initializer>~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineMakeInVisible (Node): void~org.apache.xml.security.algorithms.MessageDigestAlgorithm.getBaseNamespace (): String~org.apache.xml.security.keys.KeyInfo.getX509CertificateFromInternalResolvers (): X509Certificate~org.apache.xml.security.utils.XMLUtils.getXerces1Version (): String~org.apache.xml.security.utils.XMLUtils.elementIsInSignatureSpace (Element, String): boolean~org.apache.xml.security.utils.ElementProxy.getChildElementLocalName (int, String, String): Element~org.apache.xml.security.algorithms.encryption.EncryptionMethod.<static initializer>~org.apache.xml.security.signature.SignedInfo.createSecretKey (byte []): SecretKey~org.apache.xml.security.algorithms.SignatureAlgorithmSpi.SignatureAlgorithmSpi (): void~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetValidating (): boolean~org.apache.xml.security.utils.Base64.getValue (char): int~org.apache.xml.security.algorithms.Algorithm.Algorithm (Element, String): void~org.apache.xml.security.utils.I18n.getExceptionMessage (String): String~org.apache.xml.security.signature.Manifest.getBaseLocalName (): String~org.apache.xml.security.algorithms.SignatureAlgorithm.getJCEAlgorithmString (): String~org.apache.xml.security.c14n.helper.NamespaceSearcher.findVisibleNonDefaultNSAttrs (): Map~org.apache.xml.security.c14n.helper.NamespaceSearcher.invisibleAncestorsContainAnyNS (boolean, boolean): boolean~org.apache.xml.security.transforms.implementations.TransformC14NWithComments.<static initializer>~org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.c14n.helper.AttrCompare.compare (Object, Object): int~org.apache.xml.security.signature.XMLSignatureInput.getNodeSet (): NodeList~org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver.<static initializer>~org.apache.xml.security.utils.XMLUtils.createElementInSignatureSpace (Document, String): Element~org.apache.xml.security.keys.keyresolver.KeyResolver.init (): void~org.apache.xml.security.algorithms.encryption.helper.AESWrapper.<static initializer>~org.apache.xml.security.signature.XMLSignature.setFollowNestedManifests (boolean): void~org.apache.xml.security.utils.Base64.decode (byte []): byte []~org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver.<static initializer>~org.apache.xml.security.algorithms.encryption.EncryptionMethod.unwrap (byte [], Key, String): Key~org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature.TransformEnvelopedSignature (): void~org.apache.xml.security.keys.content.RetrievalMethod.getTransforms (): Transforms~org.apache.xml.security.algorithms.SignatureAlgorithm.register (String, String): void~org.apache.xml.security.utils.IdResolver.getElementByIdInDSNamespace (Document, String): Element~org.apache.xml.security.transforms.Transforms.performTransforms (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.utils.XMLUtils.getXalan1Version (): String~org.apache.xml.security.utils.Base64.getBase64WrapLength (): int~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments.Canonicalizer20010315WithComments (): void~org.apache.xml.security.transforms.implementations.FuncHere.execute (XPathContext): XObject~org.apache.xml.security.utils.I18n.translate (String, Object []): String~org.apache.xml.security.transforms.Transform.getBaseLocalName (): String~org.apache.xml.security.c14n.Canonicalizer.<static initializer>~org.apache.xml.security.algorithms.encryption.EncryptionMethodSpi.<static initializer>~org.apache.xml.security.algorithms.SignatureAlgorithmSpi.<static initializer>~org.apache.xml.security.transforms.TransformSpi.TransformSpi (): void~org.apache.xml.security.c14n.helper.NamespaceSearcher.getCurrentNode (): Node~org.apache.xml.security.utils.CachedXPathFuncHereAPI.getStrFromNode (Node): String~org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI (): CachedXPathAPI~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.TripleDESWrapper (Cipher, MessageDigest): void~org.apache.xml.security.algorithms.SignatureAlgorithm.<static initializer>~org.apache.xml.security.signature.Reference.getType (): String~org.apache.xml.security.utils.IgnoreAllErrorHandler.<static initializer>~org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP.engineCanResolve (Attr, String): boolean~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.<static initializer>~org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem.engineResolve (Attr, String): XMLSignatureInput~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineInitVerify (Key): void~org.apache.xml.security.keys.KeyInfo.getX509Certificate (): X509Certificate~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetXPathString (): String~org.apache.xml.security.c14n.helper.NamespaceSearcher.NamespaceSearcher (Node, Map): void~org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver.engineResolveX509Certificate (Element, String, StorageResolver): X509Certificate~org.apache.xml.security.utils.resolver.ResourceResolver.register (String): void~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineGetJCEAlgorithmString (): String~org.apache.xml.security.Init$FuncHereLoader.getName (): String~org.apache.xml.security.utils.IgnoreAllErrorHandler.fatalError (SAXParseException): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupport.engineCanonicalize (Node): byte []~org.apache.xml.security.utils.ElementProxy.<static initializer>~org.apache.xml.security.transforms.Transforms.addTransform (Transform): void~org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass.getProviderId (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.process (TreeWalker, PrintWriter, boolean): void~org.apache.xml.security.transforms.Transform.init (): void~org.apache.xml.security.utils.JavaUtils.getBytesFromFile (String): byte []~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.engineWrap (Key, Key, byte []): byte []~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES128_BC.KeyWrapImpl_AES128_BC (): void~org.apache.xml.security.keys.content.x509.XMLX509Certificate.getX509Certificate (): X509Certificate~org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.algorithms.SignatureAlgorithm.providerInit (): void~org.apache.xml.security.c14n.helper.C14nHelper.<static initializer>~org.apache.xml.security.algorithms.Algorithm.setAlgorithmURI (String): void~org.apache.xml.security.utils.XMLUtils.classForName (String): Class~org.apache.xml.security.utils.Base64.decodeBigIntegerFromText (Text): BigInteger~org.apache.xml.security.algorithms.encryption.EncryptionMethod.EncryptionMethod (Document, String): void~org.apache.xml.security.keys.content.x509.XMLX509Certificate.getBaseLocalName (): String~org.apache.xml.security.signature.XMLSignatureInput.<static initializer>~org.apache.xml.security.algorithms.implementations.SignatureDSA.engineVerify (byte []): boolean~org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.signature.XMLSignature.<static initializer>~org.apache.xml.security.signature.Reference.getTransformsOutput (): XMLSignatureInput~org.apache.xml.security.transforms.implementations.TransformBase64Decode.enginePerformTransform (XMLSignatureInput): XMLSignatureInput~org.apache.xml.security.c14n.helper.NamespaceSearcher.findInvisibleNonDefaultNSAttrs (): Map~org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP.ResolverDirectHTTP (): void~org.apache.xml.security.algorithms.implementations.IntegrityHmac.reduceBitLength (byte [], int): byte []~org.apache.xml.security.signature.XMLSignature.getSignedInfo (): SignedInfo~org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver.X509CertificateResolver (): void~org.apache.xml.security.algorithms.encryption.helper.TripleDESWrapper.checkCMSKeyChecksum (byte [], byte []): boolean~org.apache.xml.security.algorithms.encryption.EncryptionMethodSpi.getRequiredProviderAvailable (): boolean~org.apache.xml.security.keys.content.X509Data.<static initializer>~org.apache.xml.security.utils.IdResolver.getElementByIdType (Document, String): Element~org.apache.xml.security.transforms.Transforms.item (int): Transform~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES128_BC.getRequiredProviderName (): String~org.apache.xml.security.algorithms.SignatureAlgorithm.update (byte []): void~org.apache.xml.security.utils.resolver.ResourceResolver.getInstance (Attr, String): ResourceResolver~org.apache.xml.security.utils.ElementProxy.ElementProxy (Document): void~org.apache.xml.security.transforms.implementations.TransformC14NWithComments.TransformC14NWithComments (): void~org.apache.xml.security.transforms.Transform.getImplementingClass (String): String~org.apache.xml.security.algorithms.implementations.SignatureDSA.<static initializer>~org.apache.xml.security.signature.XMLSignatureInput.XMLSignatureInput (NodeList, CachedXPathAPI): void~org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver.<static initializer>~org.apache.xml.security.algorithms.implementations.IntegrityHmac.engineVerify (byte []): boolean~org.apache.xml.security.keys.content.RetrievalMethod.RetrievalMethod (Element, String): void~org.apache.xml.security.c14n.CanonicalizerSpi.<static initializer>~org.apache.xml.security.transforms.implementations.FuncHereContext.FuncHereContext (Node, CachedXPathAPI): void~org.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineVerify (byte []): boolean~org.apache.xml.security.algorithms.encryption.EncryptionMethod.getBaseNamespace (): String~org.apache.xml.security.algorithms.JCEMapper.getProviderIsRegisteredAtSecurity (String): boolean~org.apache.xml.security.transforms.Transforms.getBaseLocalName (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineCanonicalize (NodeList): byte []~org.apache.xml.security.keys.KeyInfo.<static initializer>~org.apache.xml.security.c14n.helper.C14nNodeFilter.C14nNodeFilter (boolean): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver.engineCanResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.algorithms.SignatureAlgorithm.getImplementingClass (String): String~org.apache.xml.security.utils.HelperNodeList.appendChild (Node): void~org.apache.xml.security.c14n.Canonicalizer.canonicalize (Node): byte []~org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver.engineResolveX509Certificate (Element, String, StorageResolver): X509Certificate~org.apache.xml.security.utils.ElementProxy.getElement (): Element~org.apache.xml.security.utils.IdResolver.<static initializer>~org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey (Element, String, StorageResolver): PublicKey~org.apache.xml.security.c14n.helper.C14nHelper.namespaceIsRelative (String): boolean~org.apache.xml.security.utils.IgnoreAllErrorHandler.error (SAXParseException): void~org.apache.xml.security.transforms.Transforms.getLength (): int~org.apache.xml.security.keys.KeyInfo.init (): void~org.apache.xml.security.signature.XMLSignatureInput.XMLSignatureInput (Node): void~org.apache.xml.security.algorithms.JCEMapper.getKeyTypeFromURI (String): int~org.apache.xml.security.signature.Manifest.<static initializer>~org.apache.xml.security.c14n.helper.C14nHelper.sortAttributes (NamedNodeMap): Attr []~org.apache.xml.security.utils.HelperNodeList.item (int): Node~org.apache.xml.security.utils.XMLUtils.<static initializer>~org.apache.xml.security.utils.CachedXPathFuncHereAPI.CachedXPathFuncHereAPI (CachedXPathAPI): void~org.apache.xml.security.algorithms.encryption.EncryptionMethod.providerInit (): void~org.apache.xml.security.algorithms.implementations.SignatureDSA.engineUpdate (byte []): void~org.apache.xml.security.utils.ElementProxy.getDefaultPrefix (String): String~org.apache.xml.security.transforms.implementations.TransformXSLT.<static initializer>~org.apache.xml.security.algorithms.MessageDigestAlgorithm.getAlgorithm (): MessageDigest~org.apache.xml.security.utils.ElementProxy.getBytesFromTextChild (): byte []~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.isXPointerId (Attr, String): boolean~org.apache.xml.security.c14n.Canonicalizer.setXPathNodeSet (NodeList): void~org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem.<static initializer>~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupport.Canonicalizer20010315WithoutXPathSupport (boolean): void~org.apache.xml.security.signature.XMLSignature.checkSignatureValue (Key): boolean~org.apache.xml.security.utils.ElementProxy.getBaseURI (): String~org.apache.xml.security.keys.keyresolver.KeyResolver.canResolve (Element, String, StorageResolver): boolean~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl.engineInit (Document, EncryptionMethodParams): EncryptionMethodParams~org.apache.xml.security.keys.content.keyvalues.DSAKeyValue.<static initializer>~org.apache.xml.security.algorithms.encryption.helper.AESWrapper.unwrap (byte [], Key): byte []~org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments.Canonicalizer20010315OmitComments (): void~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_TRIPLEDES_BC.engineEncrypt (byte [], Key): byte []~org.apache.xml.security.utils.XMLUtils.getAncestorElements (Node): Vector~org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver.<static initializer>~org.apache.xml.security.signature.XMLSignatureInput.getSourceURI (): String~org.apache.xml.security.utils.resolver.ResourceResolver.canResolve (Attr, String): boolean~org.apache.xml.security.transforms.Transform.Transform (Document, String, NodeList): void~org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver.<static initializer>~org.apache.xml.security.utils.resolver.ResourceResolver.init (): void~org.apache.xml.security.utils.ElementProxy.setDefaultPrefix (String, String): void~org.apache.xml.security.signature.XMLSignatureException.XMLSignatureException (String, Object []): void~org.apache.xml.security.c14n.CanonicalizerSpi.engineGetNamespaceAware (): boolean~org.apache.xml.security.transforms.Transform.getInstance (Document, String, NodeList): Transform~org.apache.xml.security.algorithms.implementations.SignatureDSA.convertXMLDSIGtoASN1 (byte []): byte []~org.apache.xml.security.algorithms.SignatureAlgorithm.getURI (): String~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupport.removeExtraNamespaces (Node): void~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES128_BC.getRequiredProviderName (): String~org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous.engineCanResolve (Attr, String): boolean~org.apache.xml.security.signature.XMLSignatureInput.getOctetStream (): InputStream~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES192_BC.getImplementedAlgorithmURI (): String~org.apache.xml.security.c14n.CanonicalizerSpi.CanonicalizerSpi (): void~org.apache.xml.security.utils.resolver.implementations.ResolverFragment.ResolverFragment (): void~org.apache.xml.security.utils.ElementProxy.length (String, String): int~org.apache.xml.security.algorithms.encryption.implementations.BC.BlockEncryptionImpl_AES256_BC.BlockEncryptionImpl_AES256_BC (): void~org.apache.xml.security.keys.keyresolver.KeyResolver.resolvePublicKey (Element, String, StorageResolver): PublicKey~org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver.getDocFromBytes (byte []): Element~org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver.engineResolveX509Certificate (Element, String, StorageResolver): X509Certificate~org.apache.xml.security.utils.resolver.implementations.ResolverXPointer.getXPointerId (Attr, String): String~org.apache.xml.security.utils.resolver.ResourceResolverSpi.ResourceResolverSpi (): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithoutXPathSupport.process (TreeWalker, PrintWriter): void~org.apache.xml.security.utils.ElementProxy.createElementForFamily (Document, String, String): Element~org.apache.xml.security.algorithms.implementations.SignatureDSA.SignatureDSA (): void~org.apache.xml.security.c14n.implementations.Canonicalizer20010315.engineMakeVisible (Node): void~org.apache.xml.security.signature.XMLSignature.createSecretKey (byte []): SecretKey~org.apache.xml.security.utils.XMLUtils.createDSctx (Document, String, String): Element~org.apache.xml.security.algorithms.encryption.EncryptionMethod.encrypt (byte [], Key, byte []): byte []~org.apache.xml.security.utils.SignatureElementProxy.SignatureElementProxy (Element, String): void~org.apache.xml.security.keys.KeyInfo.getPublicKeyFromInternalResolvers (): PublicKey~org.apache.xml.security.utils.HexDump.byteArrayToHexString (byte []): String~org.apache.xml.security.c14n.helper.NamespaceSearcher.getNextNode (): Node~org.apache.xml.security.utils.Constants.<static initializer>~org.apache.xml.security.algorithms.encryption.implementations.BC.KeyWrapImpl_AES_BC.engineWrap (Key, Key, byte []): byte []~org.apache.xml.security.utils.ElementProxy.ElementProxy (Element, String): void~
org.apache.xml.security.test.external.org.apache.xalan.XPathAPI.XalanBug1425Test~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~0~0~0~1~0~0~1~0~1~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.interop.IAIKTest~1~1~1~1~0~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~0~1~1~0~1~1~1~1~1~1~1~0~1~1~1~0~1~0~1~1~0~1~1~1~1~1~1~0~1~1~1~0~1~0~1~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~0~1~0~0~1~1~1~1~1~1~1~0~0~1~1~1~1~0~0~1~1~1~1~1~1~1~1~0~1~1~1~1~0~1~0~1~1~1~0~1~1~1~1~0~1~1~0~1~1~1~1~0~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~0~1~1~1~0~1~1~1~1~1~1~1~0~0~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~0~1~1~1~1~0~1~1~1~1~1~1~1~0~1~0~1~0~0~1~0~1~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~0~1~1~0~1~1~1~1~1~1~1~1~1~1~0~0~1~0~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~0~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~0~1~1~1~0~0~1~0~1~1~1~0~0~1~0~1~1~1~1~1~1~0~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~1~1~1~0~1~1~1~0~1~1~1~1~1~0~1~1~1~1~0~1~1~1~0~0~1~1~0~0~1~1~1~1~1~1~1~1~1~0~0~1~1~1~0~1~1~1~0~1~0~1~0~1~1~1~1~0~1~1~1~1~1~0~1~1~0~1~1~1~0~1~1~1~1~1~0~1~1~1~0~1~1~1~1~1~0~1~1~1~1~0~0~1~
org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test~1~0~0~0~0~1~0~0~0~0~1~0~0~0~0~1~0~1~0~1~0~0~1~0~0~0~0~1~1~0~1~0~0~1~1~0~1~0~1~0~0~1~0~0~1~0~1~0~0~1~0~0~0~0~0~1~1~0~0~1~1~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~0~1~0~1~0~1~0~0~1~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~1~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~1~0~0~1~1~0~0~0~1~0~0~0~0~1~1~1~0~0~0~1~0~1~1~0~0~0~1~0~0~1~1~1~0~1~1~0~0~0~0~0~1~0~0~0~0~0~0~1~1~1~0~0~0~0~1~0~1~0~1~0~0~0~0~0~0~1~0~1~0~1~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~1~0~0~0~0~1~0~1~1~0~0~1~0~0~0~0~1~0~1~1~1~0~0~0~0~1~0~0~1~0~0~0~1~1~0~0~0~0~0~1~1~1~0~0~1~0~0~1~1~1~0~1~0~1~0~0~1~0~1~1~0~0~0~0~0~1~1~1~0~0~0~0~1~1~0~0~0~0~0~0~1~1~0~0~1~1~0~1~1~0~0~0~0~0~1~0~0~1~0~0~1~0~0~1~1~1~0~1~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~0~1~0~1~1~1~0~1~0~0~0~1~0~1~0~0~0~0~0~1~1~0~1~0~1~0~0~1~0~0~1~1~1~0~1~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~1~1~1~0~0~1~0~1~0~0~0~0~0~1~0~1~0~0~0~1~0~1~0~1~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~1~1~0~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~1~1~0~0~
org.apache.xml.security.test.signature.XMLSignatureInputTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~0~0~1~0~1~1~0~1~1~0~1~0~0~1~1~0~1~0~1~0~0~1~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~0~1~0~1~0~1~0~0~1~0~1~0~0~1~0~0~0~0~1~0~0~1~0~1~0~1~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~1~0~0~1~0~1~0~1~0~1~1~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~1~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~1~0~0~0~1~0~0~0~0~1~0~1~0~1~0~0~0~0~1~0~0~1~0~0~0~1~1~0~0~0~0~0~1~1~1~0~0~1~0~0~1~1~1~0~1~0~1~0~0~1~0~1~1~0~0~1~0~0~1~1~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~1~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~1~1~0~0~1~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~1~0~1~0~1~1~1~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~1~0~1~1~0~1~0~0~1~1~0~0~1~0~0~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~1~0~0~0~1~0~0~0~1~0~0~1~1~0~0~1~0~1~0~0~0~0~0~0~0~1~0~0~0~1~0~1~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.c14n.helper.AttrCompareTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.interop.BaltimoreTest~0~1~1~1~0~1~1~1~1~0~1~1~1~1~0~0~0~1~1~1~0~1~1~0~1~1~1~1~1~1~1~0~1~1~1~0~1~0~1~1~1~1~0~1~1~1~1~0~1~1~1~0~1~1~1~1~1~1~0~1~0~1~1~1~1~0~1~1~1~1~0~1~0~0~1~1~1~1~1~1~1~1~0~1~1~1~1~0~0~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~0~1~1~1~1~0~1~1~1~1~0~1~1~0~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~0~0~1~1~1~0~1~1~1~1~1~1~1~0~0~1~1~1~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~0~1~0~0~1~0~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~0~1~0~0~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~0~1~1~1~1~1~0~1~1~1~1~0~0~1~0~0~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~0~1~1~1~1~1~1~1~1~0~1~0~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~0~1~1~0~1~1~1~1~1~1~1~1~0~0~1~0~1~1~1~0~0~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~0~0~1~1~0~0~1~1~1~1~1~1~1~1~1~0~1~1~1~1~0~1~1~1~0~0~0~1~0~1~1~1~1~0~1~1~1~1~0~0~1~1~0~1~0~1~0~1~1~1~1~1~1~1~1~1~0~1~1~1~1~1~0~1~1~1~1~0~0~1~
org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest~0~0~1~0~0~0~0~0~0~1~1~0~0~1~0~0~0~0~0~0~0~1~1~0~1~1~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~0~1~0~1~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~1~0~0~0~0~0~1~0~0~0~1~0~1~0~1~1~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~1~0~1~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~1~1~0~1~1~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~0~0~0~1~1~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~1~0~0~1~0~0~0~0~1~0~1~0~0~0~0~1~1~1~1~1~1~0~0~1~0~1~0~1~0~0~0~0~0~0~0~0~1~0~1~0~0~1~1~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~1~0~0~1~0~1~1~0~0~0~0~1~0~0~0~1~1~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~1~1~0~0~0~0~1~0~1~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~1~1~0~0~1~0~0~0~1~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~1~0~0~0~0~0~1~
org.apache.xml.security.test.interop.RSASecurityTest~0~1~1~1~0~1~1~1~1~0~1~1~1~1~0~0~0~0~1~1~0~1~1~0~1~1~1~1~1~1~1~0~1~1~1~0~0~0~1~1~0~1~0~0~1~1~1~0~1~1~0~0~1~0~1~1~1~1~0~1~0~1~1~1~1~0~1~1~1~1~0~0~0~0~1~0~0~0~0~1~1~0~0~1~1~1~1~0~0~1~0~0~1~0~1~1~1~0~1~1~1~1~0~1~0~1~1~1~0~1~1~1~1~0~1~1~0~1~0~1~1~0~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~0~1~0~0~1~1~1~0~1~1~1~1~0~1~1~0~0~1~0~1~0~1~1~0~1~0~1~1~1~1~0~1~1~1~1~1~1~0~0~1~1~1~1~0~0~1~1~1~1~1~1~0~1~1~0~1~1~0~1~1~1~0~1~0~1~0~1~1~1~1~0~1~0~1~1~1~0~1~1~1~0~1~1~0~0~1~1~1~1~0~1~1~1~1~0~1~1~0~1~0~1~0~0~1~0~1~0~1~1~1~1~1~0~1~1~1~1~1~1~1~1~1~1~1~1~0~1~0~1~0~0~1~1~1~0~1~1~0~1~1~1~1~1~1~1~1~0~1~1~1~1~1~1~0~1~1~1~1~0~1~1~1~1~0~1~0~0~0~1~1~1~1~0~1~1~1~1~0~0~1~0~0~1~1~1~0~1~1~1~0~1~1~1~1~1~1~1~1~0~1~0~1~1~1~0~1~1~1~1~1~1~1~1~0~1~0~1~0~1~0~1~0~1~1~1~1~0~0~1~1~1~1~1~1~1~1~0~1~0~1~1~0~1~0~0~0~1~1~1~0~1~1~1~0~0~1~0~1~1~1~0~0~1~0~1~1~1~1~1~1~0~0~1~0~1~1~1~0~0~1~0~1~1~0~1~1~1~1~1~1~0~1~0~1~1~1~1~0~0~1~1~1~0~1~1~1~1~1~0~1~1~1~1~0~1~1~1~0~0~1~1~0~0~1~1~1~1~0~1~0~1~1~0~0~0~0~1~0~1~1~1~0~0~0~1~0~1~1~0~1~0~1~1~1~1~0~0~0~1~0~1~0~1~0~1~1~1~1~1~0~0~0~1~0~1~0~1~0~1~0~1~1~1~1~0~0~1~
org.apache.xml.security.test.utils.resolver.ResourceResolverSpiTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.external.org.apache.xalan.XPathAPI.AttributeAncestorOrSelf~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~0~0~0~1~0~0~1~0~1~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.c14n.helper.NamespaceSearcherTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~1~0~1~1~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~1~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~1~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.algorithms.implementations.KeyWrapTest~0~1~0~0~1~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~1~0~1~0~1~0~0~0~0~1~1~0~1~0~0~0~1~0~0~1~1~1~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~1~1~0~0~0~1~0~0~0~1~1~0~0~0~0~0~0~1~1~0~1~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~1~1~1~1~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~1~0~0~0~0~1~0~1~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~1~1~0~1~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~1~0~0~0~1~0~0~0~0~1~1~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~1~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~1~0~1~0~1~1~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~1~0~0~1~0~1~1~0~0~0~0~1~0~0~1~1~0~0~1~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~1~0~1~0~1~1~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~
org.apache.xml.security.test.algorithms.implementations.BlockEncryptionTest~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~1~0~0~1~0~1~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~1~1~0~1~0~0~0~1~0~0~1~1~1~1~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~1~0~0~0~0~0~0~1~0~0~0~0~1~1~0~1~0~1~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~1~0~1~0~0~1~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~1~0~1~1~0~0~0~0~1~0~0~1~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~1~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~0~0~0~0~
org.apache.xml.security.test.utils.Base64Test~0~0~0~0~0~0~0~0~0~0~1~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~1~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~1~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~1~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315WithoutXPathSupportTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~1~0~1~0~0~1~0~0~1~0~0~0~0~1~0~0~0~0~0~1~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~1~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~1~0~1~0~1~0~0~1~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~1~1~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~1~0~1~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~1~0~0~0~0~0~0~0~1~0~0~0~1~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~1~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~1~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~1~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~1~0~0~0~0~0~1~0~0~1~0~1~0~1~1~0~0~0~1~1~0~1~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~1~0~0~1~0~1~0~0~0~0~0~1~0~1~0~0~0~1~0~1~0~1~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~0~0~1~1~0~0~0~1~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~
org.apache.xml.security.test.c14n.helper.C14nHelperTest~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~1~0~0~1~1~1~1~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~1~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~0~1~0~0~0~0~0~0~0~0~0~1~0~0~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~1~0~1~0~1~0~0~0~0~0~0~1~1~0~0~0~0~0~0~0~1~0~0~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~1~0~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~1~1~1~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~1~0~0~1~0~0~0~1~0~0~1~0~0~1~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~0~0~0~1~0~0~0~0~1~1~0~0~0~0~1~0~0~0~1~0~0~1~0~0~0~1~0~0~0~0~0~0~1~0~0~1~0~0~0~0~0~1~0~1~0~0~1~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~1~1~0~0~0~0~0~0~1~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~0~0~1~0~0~0~0~0~0~0~0~
